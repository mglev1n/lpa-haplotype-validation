name: Build and Push Singularity Image

on:
  # Run after the Docker image build completes
  workflow_run:
    workflows: ["Build and Push Docker Image"]
    types:
      - completed
    branches: [main, master]
  # Also trigger on tag push
  push:
    tags:
      - 'v*'
  # Allow manual trigger
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: mglev1n/lpa-validation
  SINGULARITY_IMAGE: lpa-validation.sif

jobs:
  build-singularity:
    name: Build and Push Singularity Image
    runs-on: ubuntu-latest
    # Only run if the Docker build succeeded or if triggered by tag or manually
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get version for tagging
        id: get_version
        run: |
          if [[ $GITHUB_REF == refs/tags/v* ]]; then
            echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
          else
            echo "VERSION=latest" >> $GITHUB_OUTPUT
          fi

      - name: Setup Apptainer
        uses: eWaterCycle/setup-apptainer@v2
        with:
          apptainer-version: 1.3.6

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Singularity image from Docker image
        run: |
          apptainer build ${SINGULARITY_IMAGE} docker://${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.get_version.outputs.VERSION }}

      - name: Login to GHCR with Apptainer
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | apptainer remote login -u ${{ github.actor }} --password-stdin oras://${{ env.REGISTRY }}

      - name: Push Singularity image to GHCR
        run: |
          apptainer push ${SINGULARITY_IMAGE} oras://${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-singularity:${{ steps.get_version.outputs.VERSION }}

      - name: Upload Singularity image as artifact
        uses: actions/upload-artifact@v4
        with:
          name: singularity-image
          path: ${{ env.SINGULARITY_IMAGE }}
          retention-days: 5

      - name: Create Release (if tag)
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ${{ env.SINGULARITY_IMAGE }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
